
package ui;
import java.sql.Connection;
import javax.swing.table.DefaultTableModel;
import koneksi.koneksi;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;


public class MenuDasboard extends javax.swing.JPanel {
private Connection conn = new koneksi().connect();
private DefaultTableModel tabmode4;

    public MenuDasboard() {
        initComponents();
        loadData();
        tablepeminjaman();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pn_ds = new javax.swing.JPanel();
        card_anggota = new test.PanelRound();
        lbpeminjaman = new javax.swing.JLabel();
        lb_human = new javax.swing.JLabel();
        lb_anggota = new javax.swing.JLabel();
        card_anggota1 = new test.PanelRound();
        lbsiswa = new javax.swing.JLabel();
        lb_human1 = new javax.swing.JLabel();
        lb_anggota1 = new javax.swing.JLabel();
        card_anggota2 = new test.PanelRound();
        lbbuku = new javax.swing.JLabel();
        lb_human2 = new javax.swing.JLabel();
        lb_anggota2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablepeminjaman = new tools.JTableCustom();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtcaripinjam = new tools.JTextFieldRounded();
        bcariview = new tools.MyButton();

        setLayout(new java.awt.CardLayout());

        pn_ds.setBackground(new java.awt.Color(255, 255, 255));
        pn_ds.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        card_anggota.setBackground(new java.awt.Color(79, 149, 157));
        card_anggota.setRoundBottomLeft(30);
        card_anggota.setRoundBottomRight(30);
        card_anggota.setRoundTopLeft(30);
        card_anggota.setRoundTopRight(30);

        lbpeminjaman.setFont(new java.awt.Font("Poppins SemiBold", 1, 24)); // NOI18N
        lbpeminjaman.setForeground(new java.awt.Color(255, 255, 255));
        lbpeminjaman.setText("666");

        lb_human.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-reading-65.png"))); // NOI18N

        lb_anggota.setFont(new java.awt.Font("Poppins SemiBold", 1, 24)); // NOI18N
        lb_anggota.setForeground(new java.awt.Color(255, 255, 255));
        lb_anggota.setText("Peminjaman");

        javax.swing.GroupLayout card_anggotaLayout = new javax.swing.GroupLayout(card_anggota);
        card_anggota.setLayout(card_anggotaLayout);
        card_anggotaLayout.setHorizontalGroup(
            card_anggotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(card_anggotaLayout.createSequentialGroup()
                .addGroup(card_anggotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(card_anggotaLayout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(lbpeminjaman))
                    .addGroup(card_anggotaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lb_anggota)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lb_human)
                .addContainerGap(35, Short.MAX_VALUE))
        );
        card_anggotaLayout.setVerticalGroup(
            card_anggotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, card_anggotaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(card_anggotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lb_human)
                    .addGroup(card_anggotaLayout.createSequentialGroup()
                        .addComponent(lb_anggota)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbpeminjaman)))
                .addGap(29, 29, 29))
        );

        pn_ds.add(card_anggota, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 90, -1, 102));

        card_anggota1.setBackground(new java.awt.Color(79, 149, 157));
        card_anggota1.setRoundBottomLeft(30);
        card_anggota1.setRoundBottomRight(30);
        card_anggota1.setRoundTopLeft(30);
        card_anggota1.setRoundTopRight(30);

        lbsiswa.setFont(new java.awt.Font("Poppins SemiBold", 1, 24)); // NOI18N
        lbsiswa.setForeground(new java.awt.Color(255, 255, 255));
        lbsiswa.setText("666");

        lb_human1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-user-70.png"))); // NOI18N

        lb_anggota1.setFont(new java.awt.Font("Poppins SemiBold", 1, 24)); // NOI18N
        lb_anggota1.setForeground(new java.awt.Color(255, 255, 255));
        lb_anggota1.setText("Siswa");

        javax.swing.GroupLayout card_anggota1Layout = new javax.swing.GroupLayout(card_anggota1);
        card_anggota1.setLayout(card_anggota1Layout);
        card_anggota1Layout.setHorizontalGroup(
            card_anggota1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(card_anggota1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(card_anggota1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lb_anggota1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbsiswa, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lb_human1)
                .addGap(52, 52, 52))
        );
        card_anggota1Layout.setVerticalGroup(
            card_anggota1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(card_anggota1Layout.createSequentialGroup()
                .addContainerGap(11, Short.MAX_VALUE)
                .addGroup(card_anggota1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbsiswa)
                    .addGroup(card_anggota1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lb_human1)
                        .addComponent(lb_anggota1)))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pn_ds.add(card_anggota1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 90, 174, -1));

        card_anggota2.setBackground(new java.awt.Color(79, 149, 157));
        card_anggota2.setRoundBottomLeft(30);
        card_anggota2.setRoundBottomRight(30);
        card_anggota2.setRoundTopLeft(30);
        card_anggota2.setRoundTopRight(30);

        lbbuku.setFont(new java.awt.Font("Poppins SemiBold", 1, 24)); // NOI18N
        lbbuku.setForeground(new java.awt.Color(255, 255, 255));
        lbbuku.setText("666");

        lb_human2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-book-70.png"))); // NOI18N

        lb_anggota2.setFont(new java.awt.Font("Poppins SemiBold", 1, 24)); // NOI18N
        lb_anggota2.setForeground(new java.awt.Color(255, 255, 255));
        lb_anggota2.setText("BUKU");

        javax.swing.GroupLayout card_anggota2Layout = new javax.swing.GroupLayout(card_anggota2);
        card_anggota2.setLayout(card_anggota2Layout);
        card_anggota2Layout.setHorizontalGroup(
            card_anggota2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(card_anggota2Layout.createSequentialGroup()
                .addGroup(card_anggota2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(card_anggota2Layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(lbbuku)
                        .addGap(27, 27, 27))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, card_anggota2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lb_anggota2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(lb_human2)
                .addContainerGap())
        );
        card_anggota2Layout.setVerticalGroup(
            card_anggota2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, card_anggota2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(card_anggota2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lb_human2)
                    .addGroup(card_anggota2Layout.createSequentialGroup()
                        .addComponent(lb_anggota2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbbuku)))
                .addGap(23, 23, 23))
        );

        pn_ds.add(card_anggota2, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 90, -1, 102));

        tablepeminjaman.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablepeminjaman.setShowGrid(true);
        jScrollPane1.setViewportView(tablepeminjaman);

        pn_ds.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 250, 752, 290));

        jLabel1.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 204, 204));
        jLabel1.setText("Riwayat Peminjaman");
        pn_ds.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 220, -1, -1));

        jLabel2.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-tv-30.png"))); // NOI18N
        jLabel2.setText("Master > Dasboard");
        pn_ds.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 50, 190, -1));
        pn_ds.add(txtcaripinjam, new org.netbeans.lib.awtextra.AbsoluteConstraints(715, 210, 190, -1));

        bcariview.setForeground(new java.awt.Color(255, 255, 255));
        bcariview.setText("CARI");
        bcariview.setBorderColor(new java.awt.Color(242, 242, 242));
        bcariview.setColor(new java.awt.Color(51, 153, 255));
        bcariview.setColorClick(new java.awt.Color(0, 51, 255));
        bcariview.setColorOver(new java.awt.Color(51, 102, 255));
        bcariview.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        bcariview.setRadius(15);
        bcariview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bcariviewActionPerformed(evt);
            }
        });
        pn_ds.add(bcariview, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 210, -1, -1));

        add(pn_ds, "card2");
    }// </editor-fold>//GEN-END:initComponents

    private void bcariviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bcariviewActionPerformed
        tablepeminjaman();
    }//GEN-LAST:event_bcariviewActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private tools.MyButton bcariview;
    private test.PanelRound card_anggota;
    private test.PanelRound card_anggota1;
    private test.PanelRound card_anggota2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lb_anggota;
    private javax.swing.JLabel lb_anggota1;
    private javax.swing.JLabel lb_anggota2;
    private javax.swing.JLabel lb_human;
    private javax.swing.JLabel lb_human1;
    private javax.swing.JLabel lb_human2;
    private javax.swing.JLabel lbbuku;
    private javax.swing.JLabel lbpeminjaman;
    private javax.swing.JLabel lbsiswa;
    private javax.swing.JPanel pn_ds;
    private tools.JTableCustom tablepeminjaman;
    private tools.JTextFieldRounded txtcaripinjam;
    // End of variables declaration//GEN-END:variables

    private int jumlahBuku(){
     int totalBuku = 0;
     
     try {
         String sql = "SELECT COUNT(*) AS TOTAL FROM databuku";
         PreparedStatement st = conn.prepareStatement(sql);
         ResultSet rs = st.executeQuery();
         
         if (rs.next()) {
             totalBuku = rs.getInt("TOTAL");
         }
      
     } catch (Exception e){
         e.printStackTrace();
     }
    return totalBuku;
            
    }

    
    private int jumlahSiswa(){
     int totalSiswa = 0;
     
     try {
         String sql = "SELECT COUNT(*) AS TOTAL FROM datasiswa";
         PreparedStatement st = conn.prepareStatement(sql);
         ResultSet rs = st.executeQuery();
         
         if (rs.next()) {
             totalSiswa = rs.getInt("TOTAL");
         }
      
     } catch (Exception e){
         e.printStackTrace();
     }
    return totalSiswa;
            
    }
    
    private int jumlahPeminjaman(){
     int totalPinjam = 0;
     
     try {
         String sql = "SELECT COUNT(*) AS TOTAL FROM peminjaman";
         PreparedStatement st = conn.prepareStatement(sql);
         ResultSet rs = st.executeQuery();
         
         if (rs.next()) {
             totalPinjam = rs.getInt("TOTAL");
         }
      
     } catch (Exception e){
         e.printStackTrace();
     }
    return totalPinjam;
            
    }
    
    private void loadData() {
       lbsiswa.setText(String.valueOf(jumlahSiswa()));
       lbbuku.setText(String.valueOf(jumlahBuku()));
       lbpeminjaman.setText(String.valueOf(jumlahPeminjaman()));
    }

    private void tablepeminjaman() {
        Object[] Baris = {
            "Id Pinjam", "Tanggal Pinjam", "Id Siswa", "Nama Siswa", "Id Buku", "Nama Buku",
            "Penerbit", "Tahun Terbit", "Tebal Halaman", "Jumlah"};
        DefaultTableModel tabmode4 = new DefaultTableModel(null,Baris);
        String caridata = txtcaripinjam.getText();
        
        try{
             String sql = "SELECT p.id AS id_pinjam, p.id_siswa, p.nm_siswa, p.tgl_pinjam, " +
             "d.id_buku, d.nama_buku, d.penerbit, d.tahun_terbit, d.tebal_buku, d.qty " +
             "FROM peminjaman p " +
             "JOIN datapeminjaman d ON p.id = d.id_pinjam " +  // <== tambahkan SPASI di akhir
             "WHERE p.id LIKE '%" + caridata + "%' " +
             "OR d.nama_buku LIKE '%" + caridata + "%' " +
             "OR p.nm_siswa LIKE '%" + caridata + "%' " +
             "ORDER BY p.id ASC";

                Statement stat = conn.createStatement();
                ResultSet hasil = stat.executeQuery(sql);
                while (hasil.next()) {
                tabmode4.addRow(new Object[]{
                    hasil.getString("id_pinjam"),
                    hasil.getString("tgl_pinjam"),
                    hasil.getString("id_siswa"),
                    hasil.getString("nm_siswa"),
                    hasil.getString("id_buku"),
                    hasil.getString("nama_buku"),
                    hasil.getString("penerbit"),
                    hasil.getString("tahun_terbit"),
                    hasil.getString("tebal_buku"),
                    hasil.getString("qty")
                });
            }
                tablepeminjaman.setModel(tabmode4);
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Data gagal ditampilkan: " + e.getMessage());
        }  
    }
}
